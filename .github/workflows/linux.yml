name: Linux

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    strategy:
      matrix:
        go-version: ['1.22.0', '1.21.5', '1.21.0']
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out code
        uses: actions/checkout@v4

      # Listet den Inhalt des Arbeitsverzeichnisses auf, um zu überprüfen, ob alle Dateien korrekt ausgecheckt wurden
      - name: List directory content
        run: ls -la

      # Cachet die Go-Module, um die Build-Zeit zu verringern
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Test
        run: go test ./... -v

  build:
    name: Build
    needs: test
    strategy:
      matrix:
        go-version: ['1.22.0', '1.21.5', '1.21.0']
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out code
        uses: actions/checkout@v4

      # Wiederholt die Caching-Schritte für den Build-Prozess
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Build
        run: go build -o PGNHelper

      # Bereinigt das Arbeitsverzeichnis nach dem Build
      - name: Clean
        run: |
          git clean -fX
